stages:
  - dump
  - restore
  - uploads


dump_database:
  stage: dump
  script:
    - echo "Снятие дампа БД с предпрода"
    - /usr/pgsql-17/bin/pg_dump -U "$PGUSER" -p "$PGPORT" -h "$DEV_SRV" -d "$DBNAME_DEV" > db.sql
    - if [ $? -eq 0 ]; then echo 'Дамп снят успешно' | tee -a "$LOG"; else echo 'Ошибка при снятии дампа' | tee -a "$LOG"; exit 1; fi
  artifacts:
    paths:
      - db.sql
    expire_in: 1 day

restore_database:
  stage: restore
  script:
    - echo 'Отключение активных сессий'
    - /usr/pgsql-17/bin/psql -qt -h "$HOST" -d postgres -U "$PGUSER" -c "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = '$DBNAME_TEST';"
    - echo 'Сессии отключены' | tee -a "$LOG"
    # - /usr/pgsql-17/bin/psql -qt -h "$HOST" -d postgres -U "$PGUSER" -c "ALTER DATABASE \"$DBNAME_TEST\" RENAME TO \"$DBNAME_OLD\";"
    - /usr/pgsql-17/bin/psql -qt -h "$HOST" -d postgres -U "$PGUSER" -c "DROP DATABASE IF EXISTS \"$DBNAME_TEST\";"
    - echo 'Создание новой БД'
    - /usr/pgsql-17/bin/psql -qt -h "$HOST" -d postgres -U "$PGUSER" -c "CREATE DATABASE \"$DBNAME_TEST\";"
    - echo 'Выдача прав для пользователя'
    - /usr/pgsql-17/bin/psql -qt -h "$HOST" -d postgres -U "$PGUSER" -c "GRANT CONNECT, TEMPORARY ON DATABASE \"$DBNAME_TEST\" TO $PGUSER;"
    - echo 'Восстановление БД на тестовом сервере'
    - /usr/pgsql-17/bin/psql -U "$PGUSER" -h "$HOST" -d "$DBNAME_TEST" -f db.sql
    - if [ $? -eq 0 ]; then echo 'Восстановление завершено УСПЕШНО!' | tee -a "$LOG"; else echo 'Ошибка при восстановлении' | tee -a "$LOG"; exit 1; fi
    # - echo 'Очистка старых дампов (старше 30 дней)'
    # - find "$DATADIR"/sitedb* -type f -mtime +30 -delete
  dependencies:
    - dump_database

rsync_uploads:
  stage: uploads
  script:
    - echo "$ROOT_PASSWORD" | su - root -c "rsync -av /nfs/directus_dev/ /nfs/directus_test/"
  dependencies:
    - dump_database
